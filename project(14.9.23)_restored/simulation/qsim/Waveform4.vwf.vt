// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "09/13/2023 07:52:42"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          TOP_VGA_DEMO_KBD
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module TOP_VGA_DEMO_KBD_vlg_vec_tst();
// constants                                           
// general purpose registers
reg AUD_ADCDAT;
reg [7:0] treg_AUDOUT;
reg CLOCK_50;
reg PS2_CLK;
reg PS2_DAT;
reg resetN_pin;
// wires                                               
wire [7:0] AUDOUT;
wire [7:0] BG_RGB;
wire boardersDrawReq;
wire greenLight;
wire [6:0] HEX0;
wire [28:0] OVGA;
wire redLight;
wire yellowLight;

// assign statements (if any)                          
assign AUDOUT = treg_AUDOUT;
TOP_VGA_DEMO_KBD i1 (
// port map - connection between master ports and signals/registers   
	.AUD_ADCDAT(AUD_ADCDAT),
	.AUDOUT(AUDOUT),
	.BG_RGB(BG_RGB),
	.boardersDrawReq(boardersDrawReq),
	.CLOCK_50(CLOCK_50),
	.greenLight(greenLight),
	.HEX0(HEX0),
	.OVGA(OVGA),
	.PS2_CLK(PS2_CLK),
	.PS2_DAT(PS2_DAT),
	.redLight(redLight),
	.resetN_pin(resetN_pin),
	.yellowLight(yellowLight)
);
initial 
begin 
#1000000 $finish;
end 

// resetN_pin
initial
begin
	resetN_pin = 1'b0;
	resetN_pin = #40000 1'b1;
end 
endmodule

